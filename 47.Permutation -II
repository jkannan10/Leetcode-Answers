class Solution {
    public static void permute(int[] nums,List<List<Integer>>ans,List<Integer>ds,boolean[]freq){
        if(ds.size() == nums.length){
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(freq[i]) continue;
            if(i !=0 && !freq[i-1] && nums[i] == nums[i-1]) continue;
            
                    freq[i]=true;
                    ds.add(nums[i]);
                    permute(nums,ans,ds,freq);
                    ds.remove(ds.size()-1);
                    freq[i]=false;
            
        }
    }
    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>>ans=new ArrayList<>();
        Arrays.sort(nums);
        boolean freq[]=new boolean[nums.length];
        permute(nums,ans,new ArrayList<>(),freq);
        return ans;
    }
}
